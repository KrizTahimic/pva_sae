[pytest]
testpaths = tests
python_files = test_*.py

# [pytest]
# # pytest configuration for data_processing.py regression tests

# # Test discovery patterns
# python_files = test_*.py *_test.py
# python_classes = Test*
# python_functions = test_*

# # Directory to search for tests
# testpaths = tests

# # Minimum Python version
# minversion = 3.8

# # Command line options
# addopts = 
#     -v                          # verbose output
#     --tb=short                  # shorter traceback format
#     --strict-markers            # strict marker checking
#     -p no:warnings              # disable warnings
#     --color=yes                 # colored output
#     --durations=10              # show 10 slowest tests
#     --cov=interp.data_processing  # coverage for data_processing module
#     --cov-report=term-missing   # show missing lines in coverage
#     --cov-report=html           # generate HTML coverage report
#     --cov-branch                # branch coverage

# # Markers for organizing tests
# markers =
#     unit: Unit tests (fast, isolated)
#     integration: Integration tests (may be slower)
#     slow: Slow tests (can be skipped with -m "not slow")
#     critical: Critical functionality that must always pass

# # Coverage configuration
# [coverage:run]
# source = interp
# omit = 
#     */tests/*
#     */test_*
#     */__pycache__/*

# [coverage:report]
# exclude_lines =
#     # Don't complain about missing debug-only code:
#     def __repr__
#     if self\.debug
    
#     # Don't complain if tests don't hit defensive assertion code:
#     raise AssertionError
#     raise NotImplementedError
    
#     # Don't complain if non-runnable code isn't run:
#     if 0:
#     if __name__ == .__main__.:
    
#     # Don't complain about abstract methods
#     @(abc\.)?abstractmethod

# [coverage:html]
# directory = htmlcov