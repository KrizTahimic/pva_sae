{
  "metadata": {
    "timestamp": "2025-05-27T15:34:16.629661",
    "model_name": "google/gemma-2-2b",
    "total_processed": 2,
    "statistics": {
      "total_processed": 2,
      "correct_solutions": 1,
      "incorrect_solutions": 1,
      "correct_rate": 50.0,
      "results_count": 2
    },
    "dataset_directory": "mbpp_datasets"
  },
  "results": [
    {
      "task_id": 11,
      "prompt": "Write a python function to remove first and last occurrence of a given character from the string.\n\nassert remove_Occ(\"hello\",\"l\") == \"heo\"\nassert remove_Occ(\"abcda\",\"a\") == \"bcd\"\nassert remove_Occ(\"PHP\",\"P\") == \"H\"\n\n# Your code here",
      "generated_code": "def remove_Occ(string,char):\n    string = string.replace(char,\"\")\n    return string",
      "is_correct": true,
      "passed_tests": 3,
      "total_tests": 3,
      "success_rate": 100.0,
      "test_errors": [],
      "generation_time": 19.702388048171997
    },
    {
      "task_id": 12,
      "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.\n\nassert sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\nassert sort_matrix([[1, 2, 3], [-2, 4, -5], [1, -1, 1]])==[[-2, 4, -5], [1, -1, 1], [1, 2, 3]]\nassert sort_matrix([[5,8,9],[6,4,3],[2,1,4]])==[[2, 1, 4], [6, 4, 3], [5, 8, 9]]\n\n# Your code here",
      "generated_code": "def sort_matrix(matrix):\n    for i in range(len(matrix)):\n        matrix[i].sort()\n    return matrix",
      "is_correct": false,
      "passed_tests": 0,
      "total_tests": 3,
      "success_rate": 0.0,
      "test_errors": [],
      "generation_time": 4.05332612991333
    }
  ]
}