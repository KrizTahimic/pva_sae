{
  "metadata": {
    "timestamp": "2025-05-26T07:58:28.308521",
    "model_name": "google/gemma-2-2b",
    "total_processed": 3,
    "statistics": {
      "total_processed": 3,
      "correct_solutions": 1,
      "incorrect_solutions": 2,
      "correct_rate": 33.33333333333333,
      "results_count": 3
    }
  },
  "results": [
    {
      "task_id": 11,
      "problem_text": "Write a python function to remove first and last occurrence of a given character from the string.",
      "prompt": "Write a python function to remove first and last occurrence of a given character from the string.\n\nassert remove_Occ(\"hello\",\"l\") == \"heo\"\nassert remove_Occ(\"abcda\",\"a\") == \"bcd\"\nassert remove_Occ(\"PHP\",\"P\") == \"H\"\n\n# Your code here",
      "generated_code": "def remove_Occ(string,char):\n    string = string.replace(char,\"\")\n    return string",
      "is_correct": true,
      "passed_tests": 3,
      "total_tests": 3,
      "success_rate": 100.0,
      "test_errors": [],
      "generation_time": 19.096978902816772,
      "error_type": null
    },
    {
      "task_id": 12,
      "problem_text": "Write a function to sort a given matrix in ascending order according to the sum of its rows.",
      "prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows.\n\nassert sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\nassert sort_matrix([[1, 2, 3], [-2, 4, -5], [1, -1, 1]])==[[-2, 4, -5], [1, -1, 1], [1, 2, 3]]\nassert sort_matrix([[5,8,9],[6,4,3],[2,1,4]])==[[2, 1, 4], [6, 4, 3], [5, 8, 9]]\n\n# Your code here",
      "generated_code": "def sort_matrix(matrix):\n    for i in range(len(matrix)):\n        matrix[i].sort()\n    return matrix",
      "is_correct": false,
      "passed_tests": 0,
      "total_tests": 3,
      "success_rate": 0.0,
      "test_errors": [],
      "generation_time": 5.09186577796936,
      "error_type": "all_tests_failed"
    },
    {
      "task_id": 13,
      "problem_text": "Write a function to count the most common words in a dictionary.",
      "prompt": "Write a function to count the most common words in a dictionary.\n\nassert count_common(['red','green','black','pink','black','white','black','eyes','white','black','orange','pink','pink','red','red','white','orange','white',\"black\",'pink','green','green','pink','green','pink','white','orange',\"orange\",'red']) == [('pink', 6), ('black', 5), ('white', 5), ('red', 4)]\nassert count_common(['one', 'two', 'three', 'four', 'five', 'one', 'two', 'one', 'three', 'one']) == [('one', 4), ('two', 2), ('three', 2), ('four', 1)]\nassert count_common(['Facebook', 'Apple', 'Amazon', 'Netflix', 'Google', 'Apple', 'Netflix', 'Amazon']) == [('Apple', 2), ('Amazon', 2), ('Netflix', 2), ('Facebook', 1)]\n\n# Your code here",
      "generated_code": "def count_common(dictionary):\n    count = {}\n    for word in dictionary:\n        if word in count:\n            count[word] += 1\n        else:\n            count[word] = 1\n    return count.items()\n\n# Test your code\nassert count_common(['red','green','black','pink','black','white','black','eyes','white','black','orange','pink','pink','red','red','white','orange','white',\"black\",'pink','green','green','pink','green','pink','white','orange',\"orange\",'red']) == [('pink', 6), ('black', 5), ('white', 5), ('red', 4)]\nassert count_common(['one', 'two', 'three', 'four', 'five', 'one', 'two', 'one', 'three', 'one']) == [('one', 4), ('two', 2),",
      "is_correct": false,
      "passed_tests": 0,
      "total_tests": 3,
      "success_rate": 0.0,
      "test_errors": [
        "Code execution failed: '[' was never closed (<string>, line 12)"
      ],
      "generation_time": 23.544968843460083,
      "error_type": "all_tests_failed"
    }
  ]
}